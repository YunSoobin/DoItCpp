#include <iostream>
#include <vector>
using namespace std;

int find_parent(int a);
void union_parent(int a, int b);
static vector<int> parent;

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n, m;
  cin >> n >> m;

  parent.resize(n + 1);
  for(int i = 0; i <= n; i++)
  {
    parent[i] = i;
  }

  int check, a, b;
  for(int i = 0; i < m; i++)
  {
    cin >> check >> a >> b;
    if(check == 0)
    {
      union_parent(a, b);
    }
    else if(check == 1)
    {
      if(find_parent(a) == find_parent(b))
      {
        cout << "YES" << "\n";
      }
      else
      {
        cout << "NO" << "\n";
      }
    }
  }

  return 0;
}

int find_parent(int a)
{
  if(a == parent[a])
  {
    return parent[a];
  }
  else
  {
    return parent[a] = find_parent(parent[a]);
  }
}

void union_parent(int a, int b)
{
  a = find_parent(a);
  b = find_parent(b);

  if(a < b)
  {
    parent[b] = a;
  }
  else if(a > b)
  {
    parent[a] = b;
  }
}
