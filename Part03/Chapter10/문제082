#include <iostream>
#include <vector>
using namespace std;

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int N, M, K;
  cin >> N >> M >> K;

  int DP[202][202] = {0};
  for(int i = 1; i <= N + M; i++)
  {
    DP[i][0] = 1;
    DP[i][1] = i;
    DP[i][i] = 1;
    for(int j = 2; j < i; j++)
    {
      DP[i][j] = min(DP[i - 1][j - 1] + DP[i - 1][j], 1000000001);
    }
  }

  if(DP[N + M][N] < K)
  {
    cout << "-1";
    return 0;
  }

  while(1)
  {
    if(DP[N + M - 1][N - 1] >= K)
    {
      cout << "a";
      N--;
      if(N == 0)
      {
        while(M)
        {
          cout << "z";
          M--;
        }
        break;
      }
    }
    else
    {
      cout << "z";
      K -= DP[N + M - 1][N - 1];
      M--;
      if(M == 0)
      {
        while(N)
        {
          cout << "a";
          N--;
        }
        break;
      }  
    }
  }  

  return 0;
}
