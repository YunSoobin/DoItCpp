#include <iostream>
#include <queue>

using namespace std;

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int N, M;
  cin >> N >> M;

  int graph[101][101];
  for(int i = 1; i <= N; i++)
  {
    for(int j = 1; j <= N; j++)
    {
      graph[i][j] = 101;
    }
  }
  
  for(int i = 0; i < M; i++)
  {
    int A, B;
    cin >> A >> B;
    graph[A][B] = 1;
    graph[B][A] = 1;
  }

  for(int i = 1; i <= N; i++)
  {
    graph[i][i] = 0;
  }

  for(int k = 1; k <= N; k++)
  {
    for(int i = 1; i <= N; i++)
    {
      for(int j = 1; j <= N; j++)
      {
        graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j]);
      }
    }
  }

  priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
  for(int i = 1; i <= N; i++)
  {
    int result = 0;
    for(int j = 1; j <= N; j++)
    {
      result += graph[i][j];
    }
    pq.push(make_pair(result, i));
  }

  cout << pq.top().second << "\n";
  
}
