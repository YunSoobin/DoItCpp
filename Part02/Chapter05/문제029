#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

static int N;
static vector<int> A;

bool binary_search(int num);

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  
  cin >> N;
  
  A.resize(N);
  for(int i = 0; i < N; i++)
  {
    cin >> A[i];
  }
  sort(A.begin(), A.end());

  int M;
  cin >> M;

  for(int i = 0; i < M; i++)
  {
    int num;
    cin >> num;

    if(binary_search(num))
    {
      cout << "1\n";
    }
    else
    {
      cout << "0\n";
    }
  }

  return 0;
}

bool binary_search(int num)
{
  int starti = 0;
  int endi = N - 1;

  while(starti <= endi)
  {
    int midi = (starti + endi) / 2;
  
    if(num == A[midi])
    {
      return true;
    }
    else if(num < A[midi])
    {
      endi = midi - 1;
    }
    else if(num > A[midi])
    {
      starti = midi + 1 ;
    }
  }

  return false;
}
